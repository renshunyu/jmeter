"package io.github.ljwlgl.util;\n\n\nimport javax.xml.bind.*;\nimport javax.xml.transform.Result;\nimport javax.xml.transform.stream.StreamResult;\nimport java.io.InputStream;\nimport java.io.OutputStream;\nimport java.util.Objects;\n\n\n/**\n * Created with IntelliJ IDEA.\n * User: ......\n * Date: 2020/6/17\n * Description: ......JAXB...... xml ... javaBean ...............xml........................JAXB............... javax.xml.bind.annotation......\n */\npublic class XmlConfUtil {\n\n\n    private XmlConfUtil() {\n\n    }\n\n    /**\n     * ...... XML .........\n     *\n     * @return .........\n     */\n    private static Marshaller getMarshaller(JAXBContext context) {\n        try {\n            Marshaller marshaller = context.createMarshaller();\n            marshaller.setProperty(Marshaller.JAXB_FORMATTED_OUTPUT, true);\n            return marshaller;\n        } catch (JAXBException e) {\n            e.printStackTrace();\n        }\n        return null;\n    }\n\n    /**\n     * ...............\n     *\n     * @return .........\n     */\n    private static Unmarshaller getUnmarshaller(JAXBContext context) {\n        try {\n            return context.createUnmarshaller();\n        } catch (JAXBException e) {\n            e.printStackTrace();\n        }\n        return null;\n    }\n\n    /**\n     * ... xml ......... javaBean\n     *\n     * @param in  .........\n     * @param <T> javaBean .........\n     * @return javaBean ......\n     */\n    public static <T> T xml2JBean(Class<?> clazz, InputStream in) {\n        try {\n            JAXBContext context = JAXBContext.newInstance(clazz);\n            return (T) getUnmarshaller(context).unmarshal(in);\n        } catch (JAXBException e) {\n            e.printStackTrace();\n        }\n\n        return null;\n    }\n\n    /**\n     * .................. javaBean ......... xml\n     *\n     * @param instance javaBean ......\n     * @param out      .........\n     */\n    "{=)(=}"\n\n    /**\n     * ...... Schema ......\n     *\n     * @return Schema............\n     */\n    public static String generateSchema(Class<?> clazz) {\n        try {\n            JAXBContext context = JAXBContext.newInstance(clazz);\n            context.generateSchema(new SchemaOutputResolver() {\n                @Override\n                public Result createOutput(String namespaceUri, String suggestedFileName) {\n                    StreamResult result = new StreamResult(System.out);\n                    result.setSystemId(suggestedFileName);\n                    return result;\n                }\n            });\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n        return null;\n    }\n}\n"{=)(=}C%3A%2FUsers%2FEDY%2FIdeaProjects%2FCommonUtil-master